# Laravel Docker Compose - Development Environment
# Generiert aus Templates - NICHT MANUELL BEARBEITEN!

version: '3.8'

services:
  # Laravel Application (Development)
  app:
    build:
      context: .
      dockerfile: docker/shared/dockerfile/Dockerfile
      target: development
    container_name: ${PROJECT_NAME:-laravel}_app_dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
      - /var/www/html/node_modules
      - /var/www/html/vendor
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG=client_host=host.docker.internal
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_network

  # Nginx Web Server
  nginx:
    image: nginx:1.24-alpine
    container_name: ${PROJECT_NAME:-laravel}_nginx_dev
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-8100}:80"
    volumes:
      - ./:/var/www/html:delegated
      - ./docker/shared/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/shared/nginx/default.conf:/etc/nginx/http.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - laravel_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME:-laravel}_mysql_dev
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-8106}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/local/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - laravel_network

  # Redis Cache/Session/Queue
  redis:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME:-laravel}_redis_dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-8179}:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - redis_data:/data
    networks:
      - laravel_network

  # Laravel Scheduler (Development)
  scheduler:
    build:
      context: .
      dockerfile: docker/shared/dockerfile/Dockerfile
      target: development
    container_name: ${PROJECT_NAME:-laravel}_scheduler_dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
    command: php artisan schedule:work
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_network

  # Laravel Queue Worker (Development)
  queue:
    build:
      context: .
      dockerfile: docker/shared/dockerfile/Dockerfile
      target: development
    container_name: ${PROJECT_NAME:-laravel}_queue_dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
    command: php artisan queue:work redis --sleep=3 --tries=3 --max-time=3600
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_network

  # MailHog (Development Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${PROJECT_NAME:-laravel}_mailhog_dev
    restart: unless-stopped
    ports:
      - "${MAILHOG_PORT:-8125}:8025"
    networks:
      - laravel_network

  # PhpMyAdmin (Development Database Management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PROJECT_NAME:-laravel}_phpmyadmin_dev
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT:-8180}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-laravel}
      PMA_PASSWORD: ${DB_PASSWORD:-password}
    depends_on:
      - mysql
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge
    name: ${PROJECT_NAME:-laravel}_network_dev

volumes:
  mysql_data:
    name: ${PROJECT_NAME:-laravel}_mysql_data_dev
  redis_data:
    name: ${PROJECT_NAME:-laravel}_redis_data_dev
  nginx_logs:
    name: ${PROJECT_NAME:-laravel}_nginx_logs_dev